// Auto-generated by PisP.gen.code2solver.Cpp
#include <bitset>
#include <iostream>

using namespace std;

bitset<6> q;int i = 0;void S0() {                                                                                                                                                                                                                                                             void S1() {                                                                                                                                void S2() {                                                      void S3() {                                                      void S_() {
                        if (!q[0]) {if (q[0])                                                                                                                                                                                                                                                   if (!q[1]) {if (q[1])                                                                                                                      if (!q[2]) {if (q[2])                                            if (!q[3]) {if (q[3])                                            i++;
                          S1();         q.reset(0);if (q[1])                                                                                                                    if (q[2])                                                                 if (q[4])                   q.set(0)    S2();         q.reset(1);if (q[2])                                                                 if (q[4])                   q.set(1)    S3();         q.reset(2);if (q[4])                   q.set(2)    S_();         q.reset(3);if (q[4])                   q.set(3)}
                                                       q.reset(1);if (q[2])                                          if (q[3])                                          q.set(1)    q.reset(2);if (q[3])                                          q.set(2)    q.reset(4);S1();q.set(4)                                         q.reset(2);if (q[3])                                          q.set(2)    q.reset(4);S2();q.set(4)                                         q.reset(4);S3();q.set(4)                                         q.reset(4);S_();q.set(4)
                        }                                             q.reset(2);if (q[5])                   q.set(2)    q.reset(3);if (q[5])                   q.set(3)                           q.reset(3);if (q[5])                   q.set(3)        }                                     }                                             q.reset(3);if (q[5])                   q.set(3)        }                                     }                          }                                     }                          }
                                                                                     q.reset(5);S1();q.set(5)                           q.reset(5);S1();q.set(5)                                                  q.reset(5);S1();q.set(5)                                                                                                                   q.reset(5);S2();q.set(5)                                                                  }                                                                }
                                                                                 }                                                  }                                                                         }                                                                                                                                          }                                                                               }                                                                }
                                                                  }                                                  }                                                                         }                                                                                                                                          }
                                                   }                                                                                                                            }                                                                                                                                          }
                                    }                                                                                                                                                                                                                                                                       }
                      }                                                                                                                                                                                                                                                                       }

int main() {
  cout << "Solving My Easy Test Puzzle..." << endl;
  q.reset();
  S0(); /* start solver */
  cout << "Found " << i << " solutions.";
  return 0;
}
