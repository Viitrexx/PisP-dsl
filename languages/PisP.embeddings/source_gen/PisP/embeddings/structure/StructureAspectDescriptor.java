package PisP.embeddings.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAbstractPuzzle = createDescriptorForAbstractPuzzle();
  /*package*/ final ConceptDescriptor myConceptAspect = createDescriptorForAspect();
  /*package*/ final ConceptDescriptor myConceptEmbedding = createDescriptorForEmbedding();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractPuzzle, myConceptAspect, myConceptEmbedding);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AbstractPuzzle:
        return myConceptAbstractPuzzle;
      case LanguageConceptSwitch.Aspect:
        return myConceptAspect;
      case LanguageConceptSwitch.Embedding:
        return myConceptEmbedding;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAbstractPuzzle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.embeddings", "AbstractPuzzle", 0xf18355ad2d424a0aL, 0xa78566932d080030L, 0x4eaa6535d7c70685L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:cd85b164-24d2-4aec-b907-5b4dd768d9db(PisP.embeddings.structure)/5668454362927007365");
    b.version(3);
    b.aggregate("aspects", 0x4eaa6535d7c8a9cfL).target(0xf18355ad2d424a0aL, 0xa78566932d080030L, 0x4eaa6535d7c8b0a3L).optional(true).ordered(true).multiple(true).origin("5668454362927114703").done();
    b.aggregate("embeddings", 0x4eaa6535d7c8aaa1L).target(0xf18355ad2d424a0aL, 0xa78566932d080030L, 0x4eaa6535d7c8b4ebL).optional(true).ordered(true).multiple(true).origin("5668454362927114913").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAspect() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.embeddings", "Aspect", 0xf18355ad2d424a0aL, 0xa78566932d080030L, 0x4eaa6535d7c8b0a3L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:cd85b164-24d2-4aec-b907-5b4dd768d9db(PisP.embeddings.structure)/5668454362927116451");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmbedding() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.embeddings", "Embedding", 0xf18355ad2d424a0aL, 0xa78566932d080030L, 0x4eaa6535d7c8b4ebL);
    b.class_(false, false, false);
    b.origin("r:cd85b164-24d2-4aec-b907-5b4dd768d9db(PisP.embeddings.structure)/5668454362927117547");
    b.version(3);
    b.aggregate("aspects", 0x4eaa6535d7c8b814L).target(0xf18355ad2d424a0aL, 0xa78566932d080030L, 0x4eaa6535d7c8b0a3L).optional(true).ordered(true).multiple(true).origin("5668454362927118356").done();
    return b.create();
  }
}
