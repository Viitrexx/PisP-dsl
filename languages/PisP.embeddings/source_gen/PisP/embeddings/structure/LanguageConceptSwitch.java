package PisP.embeddings.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AbstractPuzzle = 0;
  public static final int Aspect = 1;
  public static final int Embedding = 2;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xf18355ad2d424a0aL, 0xa78566932d080030L);
    builder.put(0x4eaa6535d7c70685L, AbstractPuzzle);
    builder.put(0x4eaa6535d7c8b0a3L, Aspect);
    builder.put(0x4eaa6535d7c8b4ebL, Embedding);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
