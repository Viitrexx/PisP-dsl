package PisP.code.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAspect = createDescriptorForAspect();
  /*package*/ final ConceptDescriptor myConceptAspectEquality = createDescriptorForAspectEquality();
  /*package*/ final ConceptDescriptor myConceptAspectsDefinition = createDescriptorForAspectsDefinition();
  /*package*/ final ConceptDescriptor myConceptBoolean = createDescriptorForBoolean();
  /*package*/ final ConceptDescriptor myConceptBooleanAnd = createDescriptorForBooleanAnd();
  /*package*/ final ConceptDescriptor myConceptBooleanNot = createDescriptorForBooleanNot();
  /*package*/ final ConceptDescriptor myConceptCollection = createDescriptorForCollection();
  /*package*/ final ConceptDescriptor myConceptCollectionAssignment = createDescriptorForCollectionAssignment();
  /*package*/ final ConceptDescriptor myConceptCollectionBase = createDescriptorForCollectionBase();
  /*package*/ final ConceptDescriptor myConceptCollectionBigUnion = createDescriptorForCollectionBigUnion();
  /*package*/ final ConceptDescriptor myConceptCollectionEmpty = createDescriptorForCollectionEmpty();
  /*package*/ final ConceptDescriptor myConceptCollectionEquality = createDescriptorForCollectionEquality();
  /*package*/ final ConceptDescriptor myConceptCollectionIntersection = createDescriptorForCollectionIntersection();
  /*package*/ final ConceptDescriptor myConceptCollectionMaker = createDescriptorForCollectionMaker();
  /*package*/ final ConceptDescriptor myConceptCollectionMembership = createDescriptorForCollectionMembership();
  /*package*/ final ConceptDescriptor myConceptCollectionMin = createDescriptorForCollectionMin();
  /*package*/ final ConceptDescriptor myConceptCollectionMinus = createDescriptorForCollectionMinus();
  /*package*/ final ConceptDescriptor myConceptCollectionUnion = createDescriptorForCollectionUnion();
  /*package*/ final ConceptDescriptor myConceptCollectionVariable = createDescriptorForCollectionVariable();
  /*package*/ final ConceptDescriptor myConceptEmbedding = createDescriptorForEmbedding();
  /*package*/ final ConceptDescriptor myConceptEmbeddingsDefinition = createDescriptorForEmbeddingsDefinition();
  /*package*/ final ConceptDescriptor myConceptForLoop = createDescriptorForForLoop();
  /*package*/ final ConceptDescriptor myConceptFunctionCall = createDescriptorForFunctionCall();
  /*package*/ final ConceptDescriptor myConceptFunctionDeclaration = createDescriptorForFunctionDeclaration();
  /*package*/ final ConceptDescriptor myConceptGlobalVariableDeclaration = createDescriptorForGlobalVariableDeclaration();
  /*package*/ final ConceptDescriptor myConceptIfStatement = createDescriptorForIfStatement();
  /*package*/ final ConceptDescriptor myConceptInfinityAspect = createDescriptorForInfinityAspect();
  /*package*/ final ConceptDescriptor myConceptLocalVariableDeclaration = createDescriptorForLocalVariableDeclaration();
  /*package*/ final ConceptDescriptor myConceptPickAspect = createDescriptorForPickAspect();
  /*package*/ final ConceptDescriptor myConceptProgram = createDescriptorForProgram();
  /*package*/ final ConceptDescriptor myConceptStatement = createDescriptorForStatement();
  /*package*/ final ConceptDescriptor myConceptSubset = createDescriptorForSubset();
  /*package*/ final ConceptDescriptor myConceptVariable = createDescriptorForVariable();
  /*package*/ final ConceptDescriptor myConceptVariableSuccessor = createDescriptorForVariableSuccessor();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAspect, myConceptAspectEquality, myConceptAspectsDefinition, myConceptBoolean, myConceptBooleanAnd, myConceptBooleanNot, myConceptCollection, myConceptCollectionAssignment, myConceptCollectionBase, myConceptCollectionBigUnion, myConceptCollectionEmpty, myConceptCollectionEquality, myConceptCollectionIntersection, myConceptCollectionMaker, myConceptCollectionMembership, myConceptCollectionMin, myConceptCollectionMinus, myConceptCollectionUnion, myConceptCollectionVariable, myConceptEmbedding, myConceptEmbeddingsDefinition, myConceptForLoop, myConceptFunctionCall, myConceptFunctionDeclaration, myConceptGlobalVariableDeclaration, myConceptIfStatement, myConceptInfinityAspect, myConceptLocalVariableDeclaration, myConceptPickAspect, myConceptProgram, myConceptStatement, myConceptSubset, myConceptVariable, myConceptVariableSuccessor);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Aspect:
        return myConceptAspect;
      case LanguageConceptSwitch.AspectEquality:
        return myConceptAspectEquality;
      case LanguageConceptSwitch.AspectsDefinition:
        return myConceptAspectsDefinition;
      case LanguageConceptSwitch.Boolean:
        return myConceptBoolean;
      case LanguageConceptSwitch.BooleanAnd:
        return myConceptBooleanAnd;
      case LanguageConceptSwitch.BooleanNot:
        return myConceptBooleanNot;
      case LanguageConceptSwitch.Collection:
        return myConceptCollection;
      case LanguageConceptSwitch.CollectionAssignment:
        return myConceptCollectionAssignment;
      case LanguageConceptSwitch.CollectionBase:
        return myConceptCollectionBase;
      case LanguageConceptSwitch.CollectionBigUnion:
        return myConceptCollectionBigUnion;
      case LanguageConceptSwitch.CollectionEmpty:
        return myConceptCollectionEmpty;
      case LanguageConceptSwitch.CollectionEquality:
        return myConceptCollectionEquality;
      case LanguageConceptSwitch.CollectionIntersection:
        return myConceptCollectionIntersection;
      case LanguageConceptSwitch.CollectionMaker:
        return myConceptCollectionMaker;
      case LanguageConceptSwitch.CollectionMembership:
        return myConceptCollectionMembership;
      case LanguageConceptSwitch.CollectionMin:
        return myConceptCollectionMin;
      case LanguageConceptSwitch.CollectionMinus:
        return myConceptCollectionMinus;
      case LanguageConceptSwitch.CollectionUnion:
        return myConceptCollectionUnion;
      case LanguageConceptSwitch.CollectionVariable:
        return myConceptCollectionVariable;
      case LanguageConceptSwitch.Embedding:
        return myConceptEmbedding;
      case LanguageConceptSwitch.EmbeddingsDefinition:
        return myConceptEmbeddingsDefinition;
      case LanguageConceptSwitch.ForLoop:
        return myConceptForLoop;
      case LanguageConceptSwitch.FunctionCall:
        return myConceptFunctionCall;
      case LanguageConceptSwitch.FunctionDeclaration:
        return myConceptFunctionDeclaration;
      case LanguageConceptSwitch.GlobalVariableDeclaration:
        return myConceptGlobalVariableDeclaration;
      case LanguageConceptSwitch.IfStatement:
        return myConceptIfStatement;
      case LanguageConceptSwitch.InfinityAspect:
        return myConceptInfinityAspect;
      case LanguageConceptSwitch.LocalVariableDeclaration:
        return myConceptLocalVariableDeclaration;
      case LanguageConceptSwitch.PickAspect:
        return myConceptPickAspect;
      case LanguageConceptSwitch.Program:
        return myConceptProgram;
      case LanguageConceptSwitch.Statement:
        return myConceptStatement;
      case LanguageConceptSwitch.Subset:
        return myConceptSubset;
      case LanguageConceptSwitch.Variable:
        return myConceptVariable;
      case LanguageConceptSwitch.VariableSuccessor:
        return myConceptVariableSuccessor;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAspect() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "Aspect", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69a026L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129414182");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAspectEquality() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "AspectEquality", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c87db03L);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Boolean
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69445dL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630131395331");
    b.version(3);
    b.aggregate("left", 0x313e5f10c87e0ceL).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69a026L).optional(false).ordered(true).multiple(false).origin("221773630131396814").done();
    b.aggregate("right", 0x313e5f10c87e45eL).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69a026L).optional(false).ordered(true).multiple(false).origin("221773630131397726").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAspectsDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "AspectsDefinition", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c76f687L);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Statement
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c691f2cL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630130288263");
    b.version(3);
    b.aggregate("aspects", 0x313e5f10c7703f8L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69a026L).optional(true).ordered(true).multiple(true).origin("221773630130291704").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolean() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "Boolean", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69445dL);
    b.class_(false, true, false);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129390685");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBooleanAnd() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "BooleanAnd", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c696b86L);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Boolean
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69445dL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129400710");
    b.version(3);
    b.aggregate("left", 0x313e5f10c696d0dL).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69445dL).optional(false).ordered(true).multiple(false).origin("221773630129401101").done();
    b.aggregate("right", 0x313e5f10c696f99L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69445dL).optional(false).ordered(true).multiple(false).origin("221773630129401753").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBooleanNot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "BooleanNot", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69dc92L);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Boolean
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69445dL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129429650");
    b.version(3);
    b.aggregate("boolean", 0x313e5f10c69e4cdL).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69445dL).optional(false).ordered(true).multiple(false).origin("221773630129431757").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollection() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "Collection", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL);
    b.class_(false, true, false);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129419759");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollectionAssignment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "CollectionAssignment", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c7e9ffaL);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Statement
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c691f2cL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630130790394");
    b.version(3);
    b.aggregate("var", 0x313e5f10c7ea647L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c698badL).optional(false).ordered(true).multiple(false).origin("221773630130792007").done();
    b.aggregate("collection", 0x313e5f10c7ea9d7L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(false).ordered(true).multiple(false).origin("221773630130792919").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollectionBase() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "CollectionBase", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c6a5668L);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Collection
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129460840");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollectionBigUnion() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "CollectionBigUnion", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c6a0479L);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Collection
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129439865");
    b.version(3);
    b.aggregate("collection", 0x313e5f10c6a095aL).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(false).ordered(true).multiple(false).origin("221773630129441114").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollectionEmpty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "CollectionEmpty", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c748b6bL);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Collection
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630130129771");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollectionEquality() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "CollectionEquality", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69d333L);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Boolean
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69445dL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129427251");
    b.version(3);
    b.aggregate("left", 0x313e5f10c69d75eL).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(false).ordered(true).multiple(false).origin("221773630129428318").done();
    b.aggregate("right", 0x313e5f10c69d7e2L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(false).ordered(true).multiple(false).origin("221773630129428450").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollectionIntersection() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "CollectionIntersection", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69f80cL);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Collection
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129436684");
    b.version(3);
    b.aggregate("left", 0x313e5f10c69fec3L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(false).ordered(true).multiple(false).origin("221773630129438403").done();
    b.aggregate("right", 0x313e5f10c6a0135L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(false).ordered(true).multiple(false).origin("221773630129439029").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollectionMaker() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "CollectionMaker", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c76577fL);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Collection
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630130247551");
    b.version(3);
    b.aggregate("collection", 0x313e5f10c765caeL).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(true).ordered(true).multiple(true).origin("221773630130248878").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollectionMembership() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "CollectionMembership", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c751d56L);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Boolean
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69445dL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630130167126");
    b.version(3);
    b.aggregate("element", 0x313e5f10c7524abL).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(false).ordered(true).multiple(false).origin("221773630130169003").done();
    b.aggregate("collection", 0x313e5f10c7526b5L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(false).ordered(true).multiple(false).origin("221773630130169525").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollectionMin() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "CollectionMin", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c85f94eL);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Variable
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c698badL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630131272014");
    b.version(3);
    b.aggregate("collection", 0x313e5f10c85ffb7L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(false).ordered(true).multiple(false).origin("221773630131273655").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollectionMinus() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "CollectionMinus", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c6a4707L);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Collection
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129456903");
    b.version(3);
    b.aggregate("left", 0x313e5f10c6a4b18L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(false).ordered(true).multiple(false).origin("221773630129457944").done();
    b.aggregate("right", 0x313e5f10c6a4da4L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(false).ordered(true).multiple(false).origin("221773630129458596").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollectionUnion() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "CollectionUnion", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69edc3L);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Collection
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129434051");
    b.version(3);
    b.aggregate("left", 0x313e5f10c69f23cL).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(false).ordered(true).multiple(false).origin("221773630129435196").done();
    b.aggregate("right", 0x313e5f10c69f3c4L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(false).ordered(true).multiple(false).origin("221773630129435588").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollectionVariable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "CollectionVariable", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c75bf4aL);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Variable
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c698badL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630130208586");
    b.version(3);
    b.aggregate("collection", 0x313e5f10c75c493L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(false).ordered(true).multiple(false).origin("221773630130209939").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmbedding() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "Embedding", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69a43bL);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Collection
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129415227");
    b.version(3);
    b.aggregate("aspects", 0x313e5f10c69a5f6L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69a026L).optional(true).ordered(true).multiple(true).origin("221773630129415670").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmbeddingsDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "EmbeddingsDefinition", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c770788L);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Statement
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c691f2cL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630130292616");
    b.version(3);
    b.aggregate("embeddings", 0x313e5f10c77130aL).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69a43bL).optional(true).ordered(true).multiple(true).origin("221773630130295562").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForForLoop() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "ForLoop", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c6960eeL);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Statement
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c691f2cL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129397998");
    b.version(3);
    b.property("element", 0x313e5f10c6a3c3fL).type(PrimitiveTypeId.STRING).origin("221773630129454143").done();
    b.aggregate("content", 0x313e5f10c69673bL).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c691f2cL).optional(true).ordered(true).multiple(true).origin("221773630129399611").done();
    b.aggregate("guard", 0x313e5f10c69685bL).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69445dL).optional(true).ordered(true).multiple(false).origin("221773630129399899").done();
    b.aggregate("iterable", 0x313e5f10c6a36b7L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(false).ordered(true).multiple(false).origin("221773630129452727").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunctionCall() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "FunctionCall", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c697826L);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Statement
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c691f2cL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129403942");
    b.version(3);
    b.property("call", 0x313e5f10c6abd82L).type(PrimitiveTypeId.STRING).origin("221773630129487234").done();
    b.aggregate("arguments", 0x313e5f10c698286L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c698badL).optional(true).ordered(true).multiple(true).origin("221773630129406598").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunctionDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "FunctionDeclaration", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c6996fcL);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Statement
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c691f2cL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129411836");
    b.version(3);
    b.aggregate("arguments", 0x313e5f10c699aa7L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c698badL).optional(true).ordered(true).multiple(true).origin("221773630129412775").done();
    b.aggregate("content", 0x313e5f10c6aa50aL).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c691f2cL).optional(true).ordered(true).multiple(true).origin("221773630129480970").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGlobalVariableDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "GlobalVariableDeclaration", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c692a4fL);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Statement
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c691f2cL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129384015");
    b.version(3);
    b.aggregate("var", 0x313e5f10c698e6eL).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c698badL).optional(false).ordered(true).multiple(false).origin("221773630129409646").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIfStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "IfStatement", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c693875L);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Statement
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c691f2cL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129387637");
    b.version(3);
    b.aggregate("content", 0x313e5f10c693f7bL).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c691f2cL).optional(true).ordered(true).multiple(true).origin("221773630129389435").done();
    b.aggregate("guard", 0x313e5f10c694ebcL).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69445dL).optional(false).ordered(true).multiple(false).origin("221773630129393340").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInfinityAspect() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "InfinityAspect", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69e892L);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Aspect
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69a026L);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129432722");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocalVariableDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "LocalVariableDeclaration", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c6953efL);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Statement
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c691f2cL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129394671");
    b.version(3);
    b.aggregate("var", 0x313e5f10c6991b2L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c698badL).optional(false).ordered(true).multiple(false).origin("221773630129410482").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPickAspect() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "PickAspect", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c72de6dL);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Statement
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c691f2cL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630130019949");
    b.version(3);
    b.aggregate("var", 0x313e5f10c72e12dL).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c698badL).optional(false).ordered(true).multiple(false).origin("221773630130020653").done();
    b.aggregate("collection", 0x313e5f10c72e233L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(false).ordered(true).multiple(false).origin("221773630130020915").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProgram() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "Program", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c691a2eL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129379886");
    b.version(3);
    b.aggregate("content", 0x313e5f10c69219dL).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c691f2cL).optional(true).ordered(true).multiple(true).origin("221773630129381789").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "Statement", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c691f2cL);
    b.class_(false, true, false);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129381164");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubset() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "Subset", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69bb05L);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Boolean
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69445dL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129421061");
    b.version(3);
    b.aggregate("left", 0x313e5f10c69c083L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(false).ordered(true).multiple(false).origin("221773630129422467").done();
    b.aggregate("right", 0x313e5f10c69c4c9L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69b5efL).optional(false).ordered(true).multiple(false).origin("221773630129423561").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "Variable", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c698badL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630129408941");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariableSuccessor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PisP.code", "VariableSuccessor", 0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c86061aL);
    b.class_(false, false, false);
    // extends: PisP.code.structure.Variable
    b.super_(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c698badL);
    b.origin("r:4650f966-7c10-4cb9-be39-3b9a8d5013e9(PisP.code.structure)/221773630131275290");
    b.version(3);
    b.aggregate("var", 0x313e5f10c860a11L).target(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c698badL).optional(false).ordered(true).multiple(false).origin("221773630131276305").done();
    return b.create();
  }
}
