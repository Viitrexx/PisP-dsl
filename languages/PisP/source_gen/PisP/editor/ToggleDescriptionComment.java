package PisP.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.cells.KeyMapImpl;
import jetbrains.mps.openapi.editor.cells.KeyMapAction;
import jetbrains.mps.editor.runtime.cells.KeyMapActionImpl;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;

public class ToggleDescriptionComment extends KeyMapImpl {
  public ToggleDescriptionComment() {
    this.setApplicableToEveryModel(false);
    KeyMapAction action;
    action = new ToggleDescriptionComment_Action0();
    this.putAction("alt", "VK_3", action);
  }
  public static class ToggleDescriptionComment_Action0 extends KeyMapActionImpl {
    public ToggleDescriptionComment_Action0() {
      this.setShownInPopupMenu(false);
    }
    public String getDescriptionText() {
      return "ToggleDescriptionComment";
    }
    public boolean isMenuAlwaysShown() {
      return false;
    }
    public boolean canExecute(final EditorContext editorContext) {
      EditorCell contextCell = editorContext.getContextCell();
      if ((contextCell == null)) {
        return false;
      }
      SNode contextNode = contextCell.getSNode();
      if (contextNode == null) {
        return false;
      }
      if (!(SNodeOperations.isInstanceOf(contextNode, CONCEPTS.IDescriptionComment$lK))) {
        return false;
      }
      return true;
    }
    public void execute(final EditorContext editorContext) {
      EditorCell contextCell = editorContext.getContextCell();
      this.execute_internal(editorContext, contextCell.getSNode(), this.getSelectedNodes(editorContext));
    }
    private void execute_internal(final EditorContext editorContext, final SNode node, final List<SNode> selectedNodes) {
      if (new IAttributeDescriptor.NodeAttribute(CONCEPTS.DescriptionComment$tN).get(node) == null) {
        SNodeFactoryOperations.setNewAttribute(node, new IAttributeDescriptor.NodeAttribute(CONCEPTS.DescriptionComment$tN), CONCEPTS.DescriptionComment$tN);
      } else {
        new IAttributeDescriptor.NodeAttribute(CONCEPTS.DescriptionComment$tN).set(node, null);
      }
    }
    public String getKeyStroke() {
      return "alt 3";
    }
  }

  private static final class CONCEPTS {
    /*package*/ static final SInterfaceConcept IDescriptionComment$lK = MetaAdapterFactory.getInterfaceConcept(0x9ea5405ccd504139L, 0x8b0811b78b688cf5L, 0x1b3c19e094c62282L, "PisP.structure.IDescriptionComment");
    /*package*/ static final SConcept DescriptionComment$tN = MetaAdapterFactory.getConcept(0x9ea5405ccd504139L, 0x8b0811b78b688cf5L, 0x1b3c19e094c6322eL, "PisP.structure.DescriptionComment");
  }
}
