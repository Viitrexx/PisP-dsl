package PisP.editor;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import javafx.scene.Group;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import javafx.scene.shape.Box;
import javafx.scene.paint.PhongMaterial;
import javafx.scene.paint.Color;

public class PieceViewer3DCubic extends PieceViewer3D {
  public PieceViewer3DCubic(SNode node, EditorContext editorContext) {
    super(node, editorContext);

    //  This version frequently runs into a problem when it tries to change a shape
    //  that does not exist, because the viewer was not updated when a new location was created.
  }

  @Override
  protected Group createGroup() {
    Group group = new Group();
    ArrayList<ArrayList<Integer>> locations = getLocations();

    for (ArrayList<Integer> arrayList : ListSequence.fromList(locations)) {
      Box box = new Box(ATOM_SIZE, ATOM_SIZE, ATOM_SIZE);
      int counter = 0;
      for (Integer l : ListSequence.fromList(arrayList)) {
        switch (counter) {
          case 0:
            box.setTranslateX(l * ATOM_SIZE);
            break;
          case 1:
            box.setTranslateY(l * ATOM_SIZE);
            break;
          case 2:
            box.setTranslateZ(l * ATOM_SIZE);
            break;
          default:
            break;
        }
        counter++;
      }
      box.setMaterial(new PhongMaterial(getColor(box.getTranslateX(), box.getTranslateY(), box.getTranslateZ())));
      group.getChildren().add(box);
    }
    return group;
  }

  private Color getColor(double x, double y, double z) {
    if (x == 0 && y == 0 && z == 0) {
      return Color.WHITE;
    } else if (z < 0) {
      return Color.CYAN;
    } else if (z > 0) {
      return Color.MAGENTA;
    } else {
      return Color.RED;
    }
  }
}
