package PisP.editor;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import javafx.scene.Group;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import javafx.scene.shape.Sphere;
import javafx.scene.paint.PhongMaterial;
import javafx.scene.paint.Color;

public class PieceViewer3DFCC extends PieceViewer3D {
  public PieceViewer3DFCC(SNode node, EditorContext editorContext) {
    super(node, editorContext);
  }

  protected Group createGroup() {
    Group group = new Group();
    ArrayList<ArrayList<Integer>> locations = getLocations();
    for (ArrayList<Integer> loc : ListSequence.fromList(locations)) {
      Sphere sphere = new Sphere(ATOM_SIZE);
      ArrayList<Double> locTransform = fcc2Cubic(loc.get(0), loc.get(1), loc.get(2));
      sphere.setTranslateX(locTransform.get(0) * ATOM_SIZE * 2);
      sphere.setTranslateY(locTransform.get(1) * ATOM_SIZE * 2);
      sphere.setTranslateZ(locTransform.get(2) * ATOM_SIZE * 2);
      sphere.setMaterial(new PhongMaterial(getColor(loc.get(0), loc.get(1), loc.get(2))));
      group.getChildren().add(sphere);
    }
    return group;
  }

  private Color getColor(int x, int y, int z) {
    if (x == 0 && y == 0 && z == 0) {
      return Color.WHITE;
    } else if (z > 0) {
      return Color.CYAN;
    } else if (z < 0) {
      return Color.MAGENTA;
    } else {
      return Color.RED;
    }
  }

  private ArrayList<Double> fcc2Cubic(int x, int y, int z) {
    ArrayList<Double> result = new ArrayList<Double>();
    result.add(1 * x + 0.5 * y + 0.5 * z);
    result.add(Math.sqrt(3) / 2 * y + Math.sqrt(3) / 6 * z);
    result.add(Math.sqrt(6) / 3 * z);
    return result;
  }
}
