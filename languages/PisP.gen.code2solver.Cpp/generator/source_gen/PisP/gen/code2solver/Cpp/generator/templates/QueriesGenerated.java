package PisP.gen.code2solver.Cpp.generator.templates;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.impl.query.QueryProviderBase;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.generator.template.PropertyMacroContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.lang.pattern.GeneratedMatchingPattern;
import jetbrains.mps.generator.template.PatternRuleContext;
import java.util.Map;
import jetbrains.mps.generator.impl.query.PatternRuleQuery;
import java.util.HashMap;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.impl.query.QueryKey;
import jetbrains.mps.generator.impl.GenerationFailureException;
import jetbrains.mps.generator.impl.query.SourceNodesQuery;
import java.util.Collection;
import jetbrains.mps.util.IterableUtil;
import jetbrains.mps.generator.impl.query.PropertyValueQuery;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.generator.impl.query.InlineSwitchCaseCondition;
import jetbrains.mps.generator.template.InlineSwitchCaseContext;
import jetbrains.mps.smodel.builder.SNodeBuilder;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SConcept;

@Generated
public class QueriesGenerated extends QueryProviderBase {
  public QueriesGenerated() {
    super(1);
  }
  public static boolean rule_Condition_0_0(final BaseMappingRuleContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.var$fGGK), PROPS.name$MnvL).equals("#A");
  }
  public static boolean rule_Condition_0_1(final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.guard$tqUz), CONCEPTS.BooleanNot$BI);
  }
  public static Object propertyMacro_GetValue_0_0(final PropertyMacroContext _context) {
    SNode cm = (SNode) SLinkOperations.getTarget(_context.getNode(), LINKS.collection$JxEq);
    SNode right = (SNode) SLinkOperations.getTarget(cm, LINKS.right$7U0X);
    return SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getChildren(right, LINKS.aspects$$a41)).first(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_0_1(final PropertyMacroContext _context) {
    SNode cu = (SNode) SLinkOperations.getTarget(_context.getNode(), LINKS.collection$JxEq);
    SNode right = (SNode) SLinkOperations.getTarget(cu, LINKS.right$E$RL);
    return SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getChildren(right, LINKS.aspects$$a41)).first(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_0_2(final PropertyMacroContext _context) {
    SNode p = ((SNode) SNodeOperations.getParent(_context.getNode()));
    SNode ca = (SNode) ListSequence.fromList(SLinkOperations.getChildren(p, LINKS.content$M6kO)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, CONCEPTS.CollectionAssignment$8e);
      }
    });
    return "bitset<" + SPropertyOperations.getString(((SNode) SLinkOperations.getTarget(ca, LINKS.collection$JxEq)), PROPS.name$MnvL) + "> q;";
  }
  public static Object propertyMacro_GetValue_0_3(final PropertyMacroContext _context) {
    return "S" + SPropertyOperations.getString(_context.getNode(), PROPS.call$fvTD).substring(7, SPropertyOperations.getString(_context.getNode(), PROPS.call$fvTD).length()) + "();";
  }
  public static Object propertyMacro_GetValue_0_4(final PropertyMacroContext _context) {
    return "S" + SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL).substring(7, SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL).length());
  }
  public static Object propertyMacro_GetValue_0_5(final PropertyMacroContext _context) {
    SNode bn = (SNode) SLinkOperations.getTarget(_context.getNode(), LINKS.guard$tqUz);
    SNode cm = (SNode) SLinkOperations.getTarget(bn, LINKS.boolean$xx2q);
    return SPropertyOperations.getString(((SNode) SLinkOperations.getTarget(cm, LINKS.element$59R_)), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_0_6(final PropertyMacroContext _context) {
    SNode cm = (SNode) SLinkOperations.getTarget(_context.getNode(), LINKS.guard$tqUz);
    return SPropertyOperations.getString(((SNode) SLinkOperations.getTarget(cm, LINKS.element$59R_)), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_1_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_1_1(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Iterable<SNode> sourceNodesQuery_0_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.content$iaG8);
  }
  public static Iterable<SNode> sourceNodesQuery_0_1(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.content$QzO3);
  }
  public static Iterable<SNode> sourceNodesQuery_0_2(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.content$QzO3);
  }
  public static Iterable<SNode> sourceNodesQuery_1_0(final SourceSubstituteMacroNodesContext _context) {
    return SNodeOperations.getPrevSiblings(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.content$M6kO)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, CONCEPTS.FunctionDeclaration$sX);
      }
    }), false);
  }
  public static Iterable<SNode> sourceNodesQuery_1_1(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SNodeOperations.getNextSiblings(SNodeOperations.getPrevSibling(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.content$M6kO)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, CONCEPTS.FunctionDeclaration$sX);
      }
    })), false)).reversedList();
  }
  public static GeneratedMatchingPattern patternRule_Condition_0_0(final PatternRuleContext _context) {
    GeneratedMatchingPattern pattern = new Pattern_x583g4_a0a0r(_quotation_createNode_x583g4_a0a0a0r());
    if (!(pattern.match(_context.getNode()))) {
      return null;
    }
    _context.createPatternContext(pattern);
    if (!(rule_Condition_0_0(_context))) {
      return null;
    }
    return pattern;
  }
  public static GeneratedMatchingPattern patternRule_Condition_0_1(final PatternRuleContext _context) {
    GeneratedMatchingPattern pattern = new Pattern_x583g4_a0a0s(_quotation_createNode_x583g4_a0a0a0s());
    if (!(pattern.match(_context.getNode()))) {
      return null;
    }
    return pattern;
  }
  public static GeneratedMatchingPattern patternRule_Condition_0_2(final PatternRuleContext _context) {
    GeneratedMatchingPattern pattern = new Pattern_x583g4_a0a0t(_quotation_createNode_x583g4_a0a0a0t());
    if (!(pattern.match(_context.getNode()))) {
      return null;
    }
    return pattern;
  }
  public static GeneratedMatchingPattern patternRule_Condition_0_3(final PatternRuleContext _context) {
    GeneratedMatchingPattern pattern = new Pattern_x583g4_a0a0u(_quotation_createNode_x583g4_a0a0a0u());
    if (!(pattern.match(_context.getNode()))) {
      return null;
    }
    return pattern;
  }
  public static GeneratedMatchingPattern patternRule_Condition_0_4(final PatternRuleContext _context) {
    GeneratedMatchingPattern pattern = new Pattern_x583g4_a0a0v(_quotation_createNode_x583g4_a0a0a0v());
    if (!(pattern.match(_context.getNode()))) {
      return null;
    }
    return pattern;
  }
  public static GeneratedMatchingPattern patternRule_Condition_0_5(final PatternRuleContext _context) {
    GeneratedMatchingPattern pattern = new Pattern_x583g4_a0a0w(_quotation_createNode_x583g4_a0a0a0w());
    if (!(pattern.match(_context.getNode()))) {
      return null;
    }
    return pattern;
  }
  public static GeneratedMatchingPattern patternRule_Condition_0_6(final PatternRuleContext _context) {
    GeneratedMatchingPattern pattern = new Pattern_x583g4_a0a0x(_quotation_createNode_x583g4_a0a0a0x());
    if (!(pattern.match(_context.getNode()))) {
      return null;
    }
    return pattern;
  }
  public static GeneratedMatchingPattern patternRule_Condition_0_7(final PatternRuleContext _context) {
    GeneratedMatchingPattern pattern = new Pattern_x583g4_a0a0y(_quotation_createNode_x583g4_a0a0a0y());
    if (!(pattern.match(_context.getNode()))) {
      return null;
    }
    return pattern;
  }
  private final Map<String, PatternRuleQuery> prcMethods = new HashMap<String, PatternRuleQuery>();
  {
    int i = 0;
    prcMethods.put("7236032289289256342", new PRQ(i++));
    prcMethods.put("7236032289290091917", new PRQ(i++));
    prcMethods.put("7236032289289525654", new PRQ(i++));
    prcMethods.put("7236032289290246813", new PRQ(i++));
    prcMethods.put("7236032289290188688", new PRQ(i++));
    prcMethods.put("7236032289290347228", new PRQ(i++));
    prcMethods.put("7236032289289562147", new PRQ(i++));
    prcMethods.put("7236032289289960846", new PRQ(i++));
  }
  @Override
  @NotNull
  public PatternRuleQuery getPatternRuleCondition(@NotNull QueryKey identity) {
    PatternRuleQuery query = identity.forTemplateNode(prcMethods);
    return (query != null ? query : super.getPatternRuleCondition(identity));
  }
  private static class PRQ implements PatternRuleQuery {
    private final int methodKey;
    public PRQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public GeneratedMatchingPattern pattern(@NotNull PatternRuleContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.patternRule_Condition_0_0(ctx);
        case 1:
          return QueriesGenerated.patternRule_Condition_0_1(ctx);
        case 2:
          return QueriesGenerated.patternRule_Condition_0_2(ctx);
        case 3:
          return QueriesGenerated.patternRule_Condition_0_3(ctx);
        case 4:
          return QueriesGenerated.patternRule_Condition_0_4(ctx);
        case 5:
          return QueriesGenerated.patternRule_Condition_0_5(ctx);
        case 6:
          return QueriesGenerated.patternRule_Condition_0_6(ctx);
        case 7:
          return QueriesGenerated.patternRule_Condition_0_7(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for rule %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, SourceNodesQuery> snsqMethods = new HashMap<String, SourceNodesQuery>();
  {
    int i = 0;
    snsqMethods.put("7236032289314979973", new SNsQ(i++));
    snsqMethods.put("7236032289314980076", new SNsQ(i++));
    snsqMethods.put("7236032289314980201", new SNsQ(i++));
    snsqMethods.put("7236032289314553160", new SNsQ(i++));
    snsqMethods.put("7236032289315220684", new SNsQ(i++));
  }
  @NotNull
  @Override
  public SourceNodesQuery getSourceNodesQuery(@NotNull QueryKey identity) {
    SourceNodesQuery query = identity.forFunctionNode(snsqMethods);
    return (query != null ? query : super.getSourceNodesQuery(identity));
  }
  private static class SNsQ implements SourceNodesQuery {
    private final int methodKey;
    public SNsQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @NotNull
    public Collection<SNode> evaluate(@NotNull SourceSubstituteMacroNodesContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_0_0(ctx));
        case 1:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_0_1(ctx));
        case 2:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_0_2(ctx));
        case 3:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_0(ctx));
        case 4:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_1(ctx));
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, PropertyValueQuery> pvqMethods = new HashMap<String, PropertyValueQuery>();
  {
    int i = 0;
    pvqMethods.put("7236032289289913248", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "a"));
    pvqMethods.put("7236032289289965935", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "a"));
    pvqMethods.put("7236032289290829305", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "bitset<#A>"));
    pvqMethods.put("7236032289289288643", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "S_();"));
    pvqMethods.put("7236032289289427716", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "S_"));
    pvqMethods.put("7236032289289405235", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "a"));
    pvqMethods.put("7236032289289421414", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "a"));
    pvqMethods.put("7236032289297442020", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "name"));
    pvqMethods.put("7236032289288646832", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "map_Program"));
  }
  @NotNull
  @Override
  public PropertyValueQuery getPropertyValueQuery(@NotNull QueryKey identity) {
    PropertyValueQuery query = identity.forTemplateNode(pvqMethods);
    return (query != null ? query : super.getPropertyValueQuery(identity));
  }
  private static class PVQ extends PropertyValueQuery.Base {
    private final int methodKey;
    /*package*/ PVQ(int methodKey, SProperty property, String templateValue) {
      super(property, templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull PropertyMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.propertyMacro_GetValue_0_0(ctx);
        case 1:
          return QueriesGenerated.propertyMacro_GetValue_0_1(ctx);
        case 2:
          return QueriesGenerated.propertyMacro_GetValue_0_2(ctx);
        case 3:
          return QueriesGenerated.propertyMacro_GetValue_0_3(ctx);
        case 4:
          return QueriesGenerated.propertyMacro_GetValue_0_4(ctx);
        case 5:
          return QueriesGenerated.propertyMacro_GetValue_0_5(ctx);
        case 6:
          return QueriesGenerated.propertyMacro_GetValue_0_6(ctx);
        case 7:
          return QueriesGenerated.propertyMacro_GetValue_1_0(ctx);
        case 8:
          return QueriesGenerated.propertyMacro_GetValue_1_1(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, InlineSwitchCaseCondition> isccMethods = new HashMap<String, InlineSwitchCaseCondition>();
  {
    int i = 0;
    isccMethods.put("7236032289289399593", new ISCC(i++));
  }
  @NotNull
  @Override
  public InlineSwitchCaseCondition getInlineSwitchCaseCondition(@NotNull QueryKey identity) {
    InlineSwitchCaseCondition query = identity.forTemplateNode(isccMethods);
    return (query != null ? query : super.getInlineSwitchCaseCondition(identity));
  }
  private static class ISCC implements InlineSwitchCaseCondition {
    private final int methodKey;
    public ISCC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(@NotNull InlineSwitchCaseContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.rule_Condition_0_1(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for inline switch's case %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private static SNode _quotation_createNode_x583g4_a0a0a0r() {
    SNode quotedNode_1 = null;
    SNode quotedNode_2 = null;
    SNode quotedNode_3 = null;
    SNodeBuilder nb = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, "PisP.code"), 0x313e5f10c7e9ffaL, "CollectionAssignment"));
    quotedNode_1 = nb.getResult();
    SNodeBuilder nb1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, "PisP.code"), 0x313e5f10c698badL, "Variable"));
    quotedNode_2 = nb1.getResult();
    quotedNode_1.addChild(MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c7e9ffaL, 0x313e5f10c7ea647L, "var"), quotedNode_2);
    SNodeBuilder nb2 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, "PisP.code"), 0x313e5f10c69b5efL, "Collection"));
    quotedNode_3 = nb2.getResult();
    quotedNode_1.addChild(MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c7e9ffaL, 0x313e5f10c7ea9d7L, "collection"), quotedNode_3);
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_a0a0a0s() {
    SNode quotedNode_1 = null;
    SNode quotedNode_2 = null;
    SNode quotedNode_3 = null;
    SNodeBuilder nb = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, "PisP.code"), 0x313e5f10c7e9ffaL, "CollectionAssignment"));
    quotedNode_1 = nb.getResult();
    SNodeBuilder nb1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, "PisP.code"), 0x313e5f10c698badL, "Variable"));
    quotedNode_2 = nb1.getResult();
    nb1.setProperty(MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "q");
    quotedNode_1.addChild(MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c7e9ffaL, 0x313e5f10c7ea647L, "var"), quotedNode_2);
    SNodeBuilder nb2 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, "PisP.code"), 0x313e5f10c6a5668L, "CollectionBase"));
    quotedNode_3 = nb2.getResult();
    nb2.setProperty(MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "A");
    quotedNode_1.addChild(MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c7e9ffaL, 0x313e5f10c7ea9d7L, "collection"), quotedNode_3);
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_a0a0a0t() {
    SNode quotedNode_1 = null;
    SNodeBuilder nb = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, "com.dslfoundry.plaintextgen"), 0xfe48d5fcafd47f4L, "word"));
    quotedNode_1 = nb.getResult();
    nb.setProperty(MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "Sn();");
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_a0a0a0u() {
    SNode quotedNode_1 = null;
    SNodeBuilder nb = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, "com.dslfoundry.plaintextgen"), 0xfe48d5fcafd47f4L, "word"));
    quotedNode_1 = nb.getResult();
    nb.setProperty(MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "S∞");
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_a0a0a0v() {
    SNode quotedNode_1 = null;
    SNodeBuilder nb = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, "com.dslfoundry.plaintextgen"), 0xfe48d5fcafd47f4L, "word"));
    quotedNode_1 = nb.getResult();
    nb.setProperty(MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "S∞();");
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_a0a0a0w() {
    SNode quotedNode_1 = null;
    SNodeBuilder nb = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, "com.dslfoundry.plaintextgen"), 0xfe48d5fcafd47f4L, "word"));
    quotedNode_1 = nb.getResult();
    nb.setProperty(MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "S0();");
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_a0a0a0x() {
    SNode quotedNode_1 = null;
    SNode quotedNode_2 = null;
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNodeBuilder nb = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, "PisP.code"), 0x313e5f10c7e9ffaL, "CollectionAssignment"));
    quotedNode_1 = nb.getResult();
    SNodeBuilder nb1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, "PisP.code"), 0x313e5f10c698badL, "Variable"));
    quotedNode_2 = nb1.getResult();
    nb1.setProperty(MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "q");
    quotedNode_1.addChild(MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c7e9ffaL, 0x313e5f10c7ea647L, "var"), quotedNode_2);
    SNodeBuilder nb2 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, "PisP.code"), 0x313e5f10c6a4707L, "CollectionMinus"));
    quotedNode_3 = nb2.getResult();
    SNodeBuilder nb3 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, "PisP.code"), 0x313e5f10c69b5efL, "Collection"));
    quotedNode_4 = nb3.getResult();
    quotedNode_3.addChild(MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c6a4707L, 0x313e5f10c6a4b18L, "left"), quotedNode_4);
    SNodeBuilder nb4 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, "PisP.code"), 0x313e5f10c69b5efL, "Collection"));
    quotedNode_5 = nb4.getResult();
    quotedNode_3.addChild(MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c6a4707L, 0x313e5f10c6a4da4L, "right"), quotedNode_5);
    quotedNode_1.addChild(MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c7e9ffaL, 0x313e5f10c7ea9d7L, "collection"), quotedNode_3);
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_a0a0a0y() {
    SNode quotedNode_1 = null;
    SNode quotedNode_2 = null;
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNodeBuilder nb = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, "PisP.code"), 0x313e5f10c7e9ffaL, "CollectionAssignment"));
    quotedNode_1 = nb.getResult();
    SNodeBuilder nb1 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, "PisP.code"), 0x313e5f10c698badL, "Variable"));
    quotedNode_2 = nb1.getResult();
    nb1.setProperty(MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "q");
    quotedNode_1.addChild(MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c7e9ffaL, 0x313e5f10c7ea647L, "var"), quotedNode_2);
    SNodeBuilder nb2 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, "PisP.code"), 0x313e5f10c69edc3L, "CollectionUnion"));
    quotedNode_3 = nb2.getResult();
    SNodeBuilder nb3 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, "PisP.code"), 0x313e5f10c69b5efL, "Collection"));
    quotedNode_4 = nb3.getResult();
    quotedNode_3.addChild(MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69edc3L, 0x313e5f10c69f23cL, "left"), quotedNode_4);
    SNodeBuilder nb4 = new SNodeBuilder(null, null).init(MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, "PisP.code"), 0x313e5f10c69b5efL, "Collection"));
    quotedNode_5 = nb4.getResult();
    quotedNode_3.addChild(MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69edc3L, 0x313e5f10c69f3c4L, "right"), quotedNode_5);
    quotedNode_1.addChild(MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c7e9ffaL, 0x313e5f10c7ea9d7L, "collection"), quotedNode_3);
    return quotedNode_1;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink var$fGGK = MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c7e9ffaL, 0x313e5f10c7ea647L, "var");
    /*package*/ static final SContainmentLink guard$tqUz = MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c693875L, 0x313e5f10c694ebcL, "guard");
    /*package*/ static final SContainmentLink collection$JxEq = MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c7e9ffaL, 0x313e5f10c7ea9d7L, "collection");
    /*package*/ static final SContainmentLink right$7U0X = MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c6a4707L, 0x313e5f10c6a4da4L, "right");
    /*package*/ static final SContainmentLink aspects$$a41 = MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69a43bL, 0x313e5f10c69a5f6L, "aspects");
    /*package*/ static final SContainmentLink right$E$RL = MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69edc3L, 0x313e5f10c69f3c4L, "right");
    /*package*/ static final SContainmentLink content$M6kO = MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c691a2eL, 0x313e5f10c69219dL, "content");
    /*package*/ static final SContainmentLink boolean$xx2q = MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69dc92L, 0x313e5f10c69e4cdL, "boolean");
    /*package*/ static final SContainmentLink element$59R_ = MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c751d56L, 0x313e5f10c7524abL, "element");
    /*package*/ static final SContainmentLink content$iaG8 = MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c6996fcL, 0x313e5f10c6aa50aL, "content");
    /*package*/ static final SContainmentLink content$QzO3 = MetaAdapterFactory.getContainmentLink(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c693875L, 0x313e5f10c693f7bL, "content");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
    /*package*/ static final SProperty call$fvTD = MetaAdapterFactory.getProperty(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c697826L, 0x313e5f10c6abd82L, "call");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept BooleanNot$BI = MetaAdapterFactory.getConcept(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c69dc92L, "PisP.code.structure.BooleanNot");
    /*package*/ static final SConcept CollectionAssignment$8e = MetaAdapterFactory.getConcept(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c7e9ffaL, "PisP.code.structure.CollectionAssignment");
    /*package*/ static final SConcept FunctionDeclaration$sX = MetaAdapterFactory.getConcept(0xf5b0334b6abe43bdL, 0x8c0e772bb60e3fffL, 0x313e5f10c6996fcL, "PisP.code.structure.FunctionDeclaration");
  }
}
